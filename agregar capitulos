void agregar(void* espacio,FILE* archivo2)
{
    estructura* es=espacio;
    newestructura* nuevo;
    nuevo->periodo=es->periodo;
    nuevo->numro=es->numro;
    trasladar(nuevo->palabra,es->palabra);
    char tex[31]="Nivel general";
    char tex2[31]="capitulos";
    if(comparar(nuevo->palabra,tex))
    {
        trasladar(nuevo->clasificador,tex);
    }
    else
    {
        trasladar(nuevo->clasificador,tex2);
    }
    crearnuevo(archivo2,nuevo);
    return ;

}

bool comparar(char* es,char* palabra)
{
    char*i=es;
    while(*i!='\0' && *palabra!='\0')
    {
        if(*i!=*palabra)
        {
            return false;
        }
        i++;
        palabra++;
    }
    return true;
}

void trasladar(char* texto,char* copytexto)
{
    while(*copytexto!='\0')
    {
        *texto=*copytexto;
        copytexto++;
        texto++;
    }
    *texto='\0';
}
void crearnuevo(FILE* archivo2, newestructura* nuevo)
{
    fprintf(archivo2,"%d/%d/%d |%s|%f|%s",nuevo->periodo.dia,nuevo->periodo.mes,nuevo->periodo.year,nuevo->palabra);
}

char tolowerpropi(char c)//mayuscula en minuscula
{
    char mayusculas[27] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','\0'};
    char minusculas[27] = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','\0'};
    int i=0;
    while(mayusculas[i]!='\0' && mayusculas[i]!=c)
    {
        i++;
    }
    if(mayusculas[i]==c)
    {
        return minusculas[i];
    }
    if(c=='Ñ')
    {
        return 'ñ';
    }
    if(mayusculas[i]=='\0')
    {
        return c;
    }

}

char toupperpropi(char c)
{
    char mayusculas[27] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','\0'};
    char minusculas[27] = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','\0'};
    int i=0;
    while(minusculas[i]!='\0' && minusculas[i]!=c)
    {
        i++;
    }
    if(minusculas[i]==c)
    {
        return mayusculas[i];
    }
    if(c=='ñ')
    {
        return 'Ñ';
    }
    if(minusculas[i]=='\0')
    {
        return c;
    }
}
